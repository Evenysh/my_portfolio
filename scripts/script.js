// –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–≤
    const progressBars = document.querySelectorAll('.progress-bar');
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const width = entry.target.style.width;
                entry.target.style.width = '0%';
                setTimeout(() => {
                    entry.target.style.width = width;
                }, 300);
            }
        });
    }, { threshold: 0.5 });

    progressBars.forEach(bar => observer.observe(bar));
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ä–µ–∑—é–º–µ
    const downloadBtn = document.querySelector('.hero-btn');
    if (downloadBtn) {
        downloadBtn.addEventListener('click', function() {
            // –ü—Ä–æ—Å—Ç–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è DOM-—ç–ª–µ–º–µ–Ω—Ç–æ–≤
            const url = 'resume.pdf';
            const fileName = 'resume.pdf';
            
            fetch(url)
                .then(response => response.blob())
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.style.display = 'none';
                    a.href = url;
                    a.download = fileName;
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);
                })
                .catch(() => {
                    // –ï—Å–ª–∏ fetch –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
                    window.location.href = url;
                });
        });
    }
});

// –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
const projectsData = [
    {
        id: 1,
        title: "–õ–∏—á–Ω—ã–π —Å–∞–π—Ç",
        category: "html",
        description: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç-–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ",
        technologies: ["HTML5", "CSS3", "JavaScript"],
        details: "–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç-–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —á–∏—Å—Ç—ã–π –¥–∏–∑–∞–π–Ω –∏ —É–¥–æ–±—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è. –ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤.",
        icon: "üåê",
        date: "–î–µ–∫–∞–±—Ä—å 2024"
    },
    {
        id: 2,
        title: "Todo-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", 
        category: "js",
        description: "–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏",
        technologies: ["JavaScript", "LocalStorage"],
        details: "–ü—Ä–æ—Å—Ç–æ–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö.",
        icon: "‚úÖ",
        date: "–Ø–Ω–≤–∞—Ä—å 2025"
    },
    {
        id: 3,
        title: "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω",
        category: "react", 
        description: "–ü—Ä–æ—Ç–æ—Ç–∏–ø –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞",
        technologies: ["React", "API"],
        details: "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ç–æ—Ç–∏–ø –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Å–∏—Å—Ç–µ–º–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.",
        icon: "üõí",
        date: "–§–µ–≤—Ä–∞–ª—å 2025"
    },
    {
        id: 4,
        title: "–õ–µ–Ω–¥–∏–Ω–≥-–ø–µ–π–¥–∂",
        category: "html",
        description: "–ü–æ—Å–∞–¥–æ—á–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞",
        technologies: ["HTML", "CSS", "Bootstrap"],
        details: "–ü—Ä–æ–¥–∞—é—â–∞—è –ø–æ—Å–∞–¥–æ—á–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º.",
        icon: "üé®",
        date: "–ú–∞—Ä—Ç 2025"
    },
    {
        id: 5,
        title: "–ü–æ–≥–æ–¥–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        category: "js",
        description: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–≥–æ–¥—ã",
        technologies: ["JavaScript", "API"],
        details: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–≥–æ–¥–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ API.",
        icon: "‚òÄÔ∏è",
        date: "–ê–ø—Ä–µ–ª—å 2025"
    },
    {
        id: 6,
        title: "–ß–∞—Ç-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        category: "react",
        description: "–†–µ–∞–ª-—Ç–∞–π–º —á–∞—Ç",
        technologies: ["React", "WebSocket"],
        details: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—â–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –∫–æ–º–Ω–∞—Ç –∏ –æ–±–º–µ–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.",
        icon: "üí¨",
        date: "–ú–∞–π 2025"
    }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
function renderProjects(filter = 'all') {
    const grid = document.getElementById('projectsGrid');
    const filteredProjects = filter === 'all' 
        ? projectsData 
        : projectsData.filter(project => project.category === filter);
    
    grid.innerHTML = filteredProjects.map(project => `
        <div class="col-lg-4 col-md-6 project-item" data-category="${project.category}">
            <div class="project-card" onclick="openProjectModal(${project.id})">
                <div class="project-icon">${project.icon}</div>
                <h3 class="project-title">${project.title}</h3>
                <p class="project-description">${project.description}</p>
                <div class="project-tech">
                    ${project.technologies.map(tech => 
                        `<span class="tech-badge">${tech}</span>`
                    ).join('')}
                </div>
                <div class="project-date">${project.date}</div>
            </div>
        </div>
    `).join('');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openProjectModal(projectId) {
    const project = projectsData.find(p => p.id === projectId);
    document.getElementById('modalProjectTitle').textContent = project.title;
    document.getElementById('modalProjectBody').innerHTML = `
        <div class="modal-project-content">
            <div class="modal-project-icon">${project.icon}</div>
            <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${project.details}</p>
            <p><strong>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</strong> ${project.technologies.join(', ')}</p>
            <p><strong>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</strong> ${project.date}</p>
            <div class="modal-project-links">
                <button class="btn btn-primary">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ</button>
                <button class="btn btn-outline-secondary">–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥</button>
            </div>
        </div>
    `;
    
    new bootstrap.Modal(document.getElementById('projectModal')).show();
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
function setupFilters() {
    const filterBtns = document.querySelectorAll('.filter-btn');
    
    filterBtns.forEach(btn => {
        btn.addEventListener('click', function() {
            filterBtns.forEach(b => b.classList.remove('active'));
            this.classList.add('active');
            renderProjects(this.getAttribute('data-filter'));
        });
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    renderProjects();
    setupFilters();
});








// ==================== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –î–ù–ï–í–ù–ò–ö–ê ====================
// ==================== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –î–ù–ï–í–ù–ò–ö–ê ====================

// –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
function openAddEntryModal() {
    const modal = new bootstrap.Modal(document.getElementById('addEntryModal'));
    modal.show();
}

// –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
function addNewEntry() {
    const title = document.getElementById('entryTitle').value;
    const description = document.getElementById('entryDescription').value;
    const status = document.getElementById('entryStatus').value;
    
    if (!title || !description) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
        return;
    }
    
    const newEntry = {
        title,
        description,
        status,
        date: new Date().toLocaleDateString('ru-RU')
    };
    
    console.log('–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å:', newEntry);
    
    const modal = bootstrap.Modal.getInstance(document.getElementById('addEntryModal'));
    modal.hide();
    document.getElementById('addEntryForm').reset();
    alert('–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–Ω–µ–≤–Ω–∏–∫–∞
function initDiaryPage() {
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const addEntryForm = document.getElementById('addEntryForm');
    if (addEntryForm) {
        addEntryForm.addEventListener('submit', function(e) {
            e.preventDefault();
            addNewEntry();
        });
    }
}

// ==================== –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ====================

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–Ω–µ–≤–Ω–∏–∫–∞
if (window.location.pathname.includes('diary.html') || 
    document.querySelector('.diary-title')) {
    
    document.addEventListener('DOMContentLoaded', initDiaryPage);
}







// ==================== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ö–û–ù–¢–ê–ö–¢–û–í ====================

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
function handleContactSubmit(event) {
    event.preventDefault();
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    const formData = {
        name: document.getElementById('name').value,
        email: document.getElementById('email').value,
        subject: document.getElementById('subject').value,
        message: document.getElementById('message').value
    };
    
    // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.name || !formData.email || !formData.message) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (–æ—Ç–º–µ—á–µ–Ω—ã *)');
        return;
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è email
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(formData.email)) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å');
        return;
    }
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã AJAX –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', formData);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    alert('–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –Ø —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
    
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    document.getElementById('contactForm').reset();
}

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
function setupContactCopy() {
    const contactItems = document.querySelectorAll('.contact-item');
    
    contactItems.forEach(item => {
        item.style.cursor = 'pointer';
        item.addEventListener('click', function() {
            const text = this.querySelector('p').textContent;
            copyToClipboard(text);
        });
    });
}

// –§—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        showCopyNotification('–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ' + text);
    }).catch(err => {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ', err);
        // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
        const textArea = document.createElement('textarea');
        textArea.value = text;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);
        showCopyNotification('–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ' + text);
    });
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏
function showCopyNotification(message) {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notification = document.createElement('div');
    notification.textContent = message;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: var(--primary-purple);
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 8px;
        z-index: 10000;
        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        animation: slideIn 0.3s ease-out;
    `;
    
    document.body.appendChild(notification);
    
    // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease-in';
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 300);
    }, 3000);
}

// –ê–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const style = document.createElement('style');
style.textContent = `
    @keyframes slideIn {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
    
    @keyframes slideOut {
        from {
            transform: translateX(0);
            opacity: 1;
        }
        to {
            transform: translateX(100%);
            opacity: 0;
        }
    }
`;
document.head.appendChild(style);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
function initContactsPage() {
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
    const contactForm = document.getElementById('contactForm');
    if (contactForm) {
        contactForm.addEventListener('submit', handleContactSubmit);
    }
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    setupContactCopy();
}

// ==================== –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ====================

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
if (window.location.pathname.includes('contacts.html') || 
    document.querySelector('.contacts-title')) {
    
    document.addEventListener('DOMContentLoaded', initContactsPage);
}